import{a as h}from"./chunk-IXTZP2PS.js";import{a as j}from"./chunk-JHOHYJWD.js";import{a as W}from"./chunk-5BWCYXSX.js";import{a as V}from"./chunk-UZQHL6UL.js";import{a as l}from"./chunk-7YJWRT5B.js";import{a as M}from"./chunk-5IM6IVN6.js";import{a as G}from"./chunk-HMNUYURD.js";import{a as R}from"./chunk-NYBZM275.js";import{O as F,_ as O,aa as U,da as E,ea as H,fa as N,va as q}from"./chunk-VY5GT2Q6.js";import"./chunk-CARY4E7O.js";import"./chunk-4KKA7PE6.js";import{Ab as C,Fa as v,Ib as w,N as o,Ob as T,Tb as D,Ub as I,Vc as $,Zb as A,a as s,ac as L,b as a,cc as c,ea as S,ka as n,n as g,o as f,oa as y,tb as m,u as p,v as d,vc as k,wc as P,y as _,ya as x,za as b}from"./chunk-VO6IE2C5.js";var u=(()=>{class r{constructor(){this._networkService=n(E),this._logs$=new f([]),this.logs$=this._logs$.asObservable()}getAllLogs(t){this._networkService.post(l.LOGS.byUser,t).pipe(o(1)).subscribe({next:e=>{e&&e.data&&this._logs$.next(e.data.map(i=>a(s({},i),{userInformation:a(s({},i.userInformation||{}),{queryParams:i.userInformation?.queryParams?JSON.stringify(i.userInformation.queryParams):void 0})})))}})}getAllSearchLogs(t){this._networkService.post(l.LOGS.search,t).pipe(o(1)).subscribe({next:e=>{e&&e.data&&this._logs$.next(e.data.map(i=>a(s({},i),{userInformation:a(s({},i.userInformation||{}),{queryParams:i.userInformation?.queryParams?JSON.stringify(i.userInformation.queryParams):void 0})})))}})}deleteLogs(t){this._networkService.delete(l.LOGS.logs,void 0,t._id).pipe(o(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}deleteSelectedLogs(t){this._networkService.delete(l.LOGS.selectedLogs,{ids:t.map(e=>e._id)}).pipe(o(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}_updateLogs(t,e){j.UpdateArrayBehaviorSubject(this._logs$,t,e,"_id")}static{this.\u0275fac=function(e){return new(e||r)}}static{this.\u0275prov=S({token:r,factory:r.\u0275fac})}}return r})();function z(r,J){if(r&1){let t=A();D(0,"ks-basic-grid",1),L("selectionChange",function(i){x(t);let K=c();return b(K.selectionChange(i))}),I()}if(r&2){let t=c();w("config",t.gridConfig)("refresh$",t.refresh$)}}var _e=(()=>{class r{constructor(){this._destroyRef=n(v),this._navService=n(R),this._storageService=n(H),this._dialog=n(U),this._logsService=n(u),this._lovService=n(V),this._snackbar=n(N),this._data=[],this._currentScreen=M("menu_logs_listing"),this._showDeleteAll=m(!1),this._selectedLogs=[],this._isAdmin=this._storageService.getItem(G.SS.user,!0)?.roles.includes("system_administrator"),this.refresh$=new g}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:$(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},onClick:()=>{this._openSearch()},hide:!this._currentScreen.search}]}),this._lovService.getMenusAndServicesLov(),this._logsService.getAllLogs({fromDate:h("start"),toDate:h("end")}),this._initializeGrid(),this._logsService.logs$.pipe(F(this._destroyRef)).subscribe(t=>{this._data=t,this.refresh$.next({data:this._data})})}selectionChange(t){this._showDeleteAll.set(!!t.length),this._selectedLogs=t}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:m([]),defaultPagination:150,maxTableHeight:W.maxTableHeightWithSearch,noDataMessage:{text:"No logs Found"},features:{showSearch:!0,enableToggleColumns:this._isAdmin},elevation:2,columns:[{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}},{field:"_service",title:"Service",type:"string",extraStyles:{"min-width":"150px"}},{field:"userInformation.uuid",title:"UUID",type:"string",extraStyles:{"min-width":"260px"},hide:!this._isAdmin,enableToggleColumn:!0},{field:"deviceType",title:"Device Type",type:"string",extraStyles:{"min-width":"110px"},enableToggleColumn:!0},{field:"userInformation.screenWidth",title:"Screen Width",type:"number",extraStyles:{"min-width":"110px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"userInformation.screenHeight",title:"Screen Height",type:"number",extraStyles:{"min-width":"120px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"userInformation.deviceOrientation",title:"Screen Orientation",type:"number",extraStyles:{"min-width":"140px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"ip",title:"ip",type:"string",extraStyles:{"min-width":"110px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"userInformation.ips",title:"ips",type:"string",extraStyles:{"min-width":"230px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"userInformation.platform",title:"Platform",type:"string",extraStyles:{"min-width":"110px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"userInformation.queryParams",title:"Query Params",type:"string",extraStyles:{"min-width":"110px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"referrer",title:"Website",type:"string",enableToggleColumn:!0},{field:"otherInformation.postal",title:"postal code",type:"string",extraStyles:{"min-width":"110px"},enableToggleColumn:!0,hide:!this._isAdmin},{field:"otherInformation.country_name",title:"Country",type:"string",enableToggleColumn:!0},{field:"otherInformation.region",title:"region",type:"string",extraStyles:{"min-width":"180px"},enableToggleColumn:!0},{field:"otherInformation.city",title:"city",type:"string",enableToggleColumn:!0},{field:"otherInformation.longitude",title:"longitude",type:"string",enableToggleColumn:!0,hide:!this._isAdmin},{field:"otherInformation.latitude",title:"latitude",type:"string",enableToggleColumn:!0,hide:!this._isAdmin},{field:"otherInformation.utc_offset",title:"timezone",type:"string",enableToggleColumn:!0,hide:!this._isAdmin},{field:"otherInformation.org",title:"network Provider",type:"string",enableToggleColumn:!0,extraStyles:{"min-width":"180px"}},{field:"userAgent",title:"User Agent",type:"string",extraStyles:{"min-width":"400px","max-width":"400px"},enableToggleColumn:!0,hide:!this._isAdmin}],actionsColumn:{enabled:this._currentScreen.insert||this._currentScreen.delete,maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"110px",minWidth:window.innerWidth<700?void 0:"110px",buttons:[{prefixIcon:{icon:"icon_search"},label:{text:"Search UUID"},onClickFn:t=>this._searchUUID(t),matType:"mat-icon-button",isVisibleFn:()=>this._currentScreen.insert},{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:t=>this._deleteLog(t),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_searchUUID(t){this.refresh$.next({data:this._data,changes:{searchText:t?.userInformation?.uuid}})}_openSearch(){if(!this._currentScreen.search)return;let t={title:{text:"Logs Search"},saveButton:{prefixIcon:{icon:"icon_search"},label:{text:"Search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start",range:{max:"toDate"}},{name:"toDate",label:{text:"To Date"},type:"date",range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"services",label:{text:"Services And Menus"},type:"select",multiple:!0,stream:this._lovService.menusAndServicesLov$.pipe(_(e=>e.filter(i=>i.type==="menu"||i.type==="service"&&i.viewLogs))),transformer:{nameKey:"name",valueKey:"_id"},required:!0}]},beforeCloseObservable:e=>e.fromDate&&e.toDate&&!O.isValidDateRange(366,e.fromDate,e.toDate)?(this._snackbar.open({text:"Maximum allowed date gap is 1 year."},"error"),d(()=>"")):e.fromHour!==void 0&&e.toHour!==void 0&&e.fromHour>=e.toHour?(this._snackbar.open({text:"From hour should be smaller than to hour."},"error"),d(()=>"")):p(e)};this._dialog.openFormPopup(t,"800px").afterClosed().pipe(o(1)).subscribe(e=>{e&&this._logsService.getAllSearchLogs({fromDate:e.fromDate,toDate:e.toDate,services:e.services?typeof e.services=="string"?[e.services]:e.services:[]})})}_deleteLog(t){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(o(1)).subscribe(i=>{i&&t&&t._id&&this._logsService.deleteLogs(t)})}_deleteSelectedLogs(){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(o(1)).subscribe(e=>{e&&this._logsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(e){return new(e||r)}}static{this.\u0275cmp=y({type:r,selectors:[["ks-solutions-logs-listing"]],standalone:!0,features:[k([u]),P],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(e,i){e&1&&C(0,z,1,2,"ks-basic-grid",0),e&2&&T(i.gridConfig?0:-1)},dependencies:[q],changeDetection:0})}}return r})();export{_e as LogsComponent};
