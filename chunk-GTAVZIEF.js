import{a as j}from"./chunk-3SSBONDS.js";import{a as G}from"./chunk-5BWCYXSX.js";import{a as M}from"./chunk-NWUP6JHR.js";import{a as R}from"./chunk-EK6DBTMH.js";import"./chunk-HMNUYURD.js";import{a as s}from"./chunk-VMV3LQCJ.js";import{a as F}from"./chunk-RWGYOCDE.js";import{M as $,Y as m,_ as H,ba as O,da as P,ta as E}from"./chunk-4IBHA7I6.js";import"./chunk-CARY4E7O.js";import"./chunk-Z72V5FLM.js";import{$b as T,Fa as b,Hb as v,N as r,Nb as C,Sb as w,Tb as D,Tc as N,Yb as k,a as l,bc as p,ea as _,ka as o,n as h,o as f,oa as x,sb as d,u,uc as I,v as c,vc as A,ya as S,za as L,zb as y}from"./chunk-P5AQMEDB.js";var g=(()=>{class i{constructor(){this._networkService=o(O),this._loginLogs$=new f([]),this.loginLogs$=this._loginLogs$.asObservable()}getAllLoginLogs(t){this._networkService.post(s.LOGIN_LOGS.logs,t).pipe(r(1)).subscribe({next:e=>{e&&e.data&&this._loginLogs$.next(e.data.map(n=>{let a=n.userInformation||{};return l(l({},n),a)}))}})}deleteLoginLogs(t){this._networkService.delete(s.LOGIN_LOGS.logs,void 0,t._id).pipe(r(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}deleteSelectedLogs(t){this._networkService.delete(s.LOGIN_LOGS.selectedLogs,{ids:t.map(e=>e._id)}).pipe(r(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}_updateLogs(t,e){j.UpdateArrayBehaviorSubject(this._loginLogs$,t,e)}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275prov=_({token:i,factory:i.\u0275fac})}}return i})();function K(i,V){if(i&1){let t=k();w(0,"ks-basic-grid",1),T("selectionChange",function(n){S(t);let a=p();return L(a.selectionChange(n))}),D()}if(i&2){let t=p();v("config",t.gridConfig)("refresh$",t.refresh$)}}var de=(()=>{class i{constructor(){this._destroyRef=o(b),this._navService=o(F),this._lovService=o(M),this._dialog=o(H),this._snackbar=o(P),this._LoginLogsService=o(g),this._currentScreen=R("login_logs_listing"),this._data=[],this._showDeleteAll=d(!1),this._selectedLogs=[],this.refresh$=new h}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:N(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},onClick:()=>{this._openSearch()}}]});let t=m.getUtcDate();this._LoginLogsService.getAllLoginLogs({fromDate:t.toDate(),toDate:t.toDate()}),this._initializeGrid(),this._LoginLogsService.loginLogs$.pipe($(this._destroyRef)).subscribe(e=>{this._data=e,this.refresh$.next({data:this._data})})}selectionChange(t){this._showDeleteAll.set(!!t.length),this._selectedLogs=t}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:d([]),defaultPagination:150,maxTableHeight:G.maxTableHeightWithSearch,noDataMessage:{text:"No login logs Found"},features:{showSearch:!0},elevation:2,columns:[{field:"email",title:"Email",type:"string",position:"p-start",enableToggleColumn:!0},{field:"name",title:"Name",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"ip",title:"ip",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"200px"}},{field:"deviceType",title:"Device Type",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"screenWidth",title:"Screen Width",type:"number",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"screenHeight",title:"Screen Height",type:"number",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"deviceOrientation",title:"Screen Orientation",type:"number",position:"p-start",extraStyles:{"min-width":"160px","max-width":"160px"}},{field:"userAgent",title:"User Agent",type:"string",position:"p-start",extraStyles:{"min-width":"300px","max-width":"300px"}}],actionsColumn:{enabled:this._currentScreen.delete,buttons:[{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:t=>this._deleteLog(t),matType:"mat-icon-button"}]}}}_openSearch(){if(!this._currentScreen.search)return;let t={title:{text:"Login Logs Search"},saveButton:{label:{text:"Search"},prefixIcon:{icon:"icon_search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start",range:{max:"toDate"}},{name:"toDate",label:{text:"To Date"},type:"date",range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"userId",label:{text:"User"},type:"autocomplete",stream:this._lovService.userLov$,transformer:{nameKey:"name",valueKey:"_id"}}]},beforeCloseObservable:e=>e.fromDate&&e.toDate&&!m.isValidDateRange(366,e.fromDate,e.toDate)?(this._snackbar.open({text:"Maximum allowed date gap is 1 year."},"error"),c(()=>"")):e.fromHour!==void 0&&e.toHour!==void 0&&e.fromHour>=e.toHour?(this._snackbar.open({text:"From hour should be smaller than to hour."},"error"),c(()=>"")):u(e)};this._dialog.openFormPopup(t,"400px").afterClosed().pipe(r(1)).subscribe(e=>{e&&this._LoginLogsService.getAllLoginLogs({fromDate:e.fromDate,toDate:e.toDate,userId:e.userId})})}_deleteLog(t){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(r(1)).subscribe(n=>{n&&t?._id&&this._LoginLogsService.deleteLoginLogs(t)})}_deleteSelectedLogs(){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(r(1)).subscribe(e=>{e&&this._LoginLogsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275cmp=x({type:i,selectors:[["ks-solutions-login-logs-listing"]],standalone:!0,features:[I([g]),A],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(e,n){e&1&&y(0,K,1,2,"ks-basic-grid",0),e&2&&C(n.gridConfig?0:-1)},dependencies:[E],changeDetection:0})}}return i})();export{de as LoginLogsComponent};
