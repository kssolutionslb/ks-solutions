import{a as A}from"./chunk-3SSBONDS.js";import{a as $}from"./chunk-5BWCYXSX.js";import{a as R}from"./chunk-NYUUJRJM.js";import{a as I}from"./chunk-EJCUKZMJ.js";import"./chunk-HMNUYURD.js";import{a}from"./chunk-VMV3LQCJ.js";import{a as k}from"./chunk-DQAHPI7D.js";import{M as g,_ as w,ba as C,ta as E}from"./chunk-RIXI3GFI.js";import"./chunk-CARY4E7O.js";import"./chunk-Z72V5FLM.js";import{Fa as m,Hb as h,N as n,Nb as f,Ub as _,a as o,bc as y,ea as v,ka as s,n as d,o as l,oa as p,sb as u,uc as x,vc as b,zb as S}from"./chunk-P5AQMEDB.js";var c=(()=>{class i{constructor(){this._networkService=s(C),this._service$=new l([]),this.service$=this._service$.asObservable(),this.serviceValue$=this._service$}getAllServices(){this._networkService.get(a.SERVICES.service).pipe(n(1)).subscribe({next:e=>{e&&e.data&&this._service$.next(e.data)}})}addService(e){return this._networkService.post(a.SERVICES.service,e)}updateService(e){return this._networkService.patch(a.SERVICES.service,e,e._id)}deleteService(e){this._networkService.delete(a.SERVICES.service,void 0,e._id).pipe(n(1)).subscribe({next:()=>{this._updateServices(e,"delete")}})}_updateServices(e,r){A.UpdateArrayBehaviorSubject(this._service$,e,r)}static{this.\u0275fac=function(r){return new(r||i)}}static{this.\u0275prov=v({token:i,factory:i.\u0275fac})}}return i})();function N(i,T){if(i&1&&_(0,"ks-basic-grid",0),i&2){let e=y();h("config",e.gridConfig)("refresh$",e.refresh$)}}var Y=(()=>{class i{constructor(){this._destroyRef=s(m),this._navService=s(k),this._lovService=s(R),this._dialog=s(w),this._servicesService=s(c),this._data=[],this._currentScreen=I("services_listing"),this.refresh$=new d}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Create New"},prefixIcon:{icon:"icon_plus_circle"},hide:!this._currentScreen.insert,onClick:()=>{this._openService()}}]}),this._servicesService.getAllServices(),this._initializeGrid(),this._servicesService.service$.pipe(g(this._destroyRef)).subscribe(e=>{this._data=e,this.refresh$.next({data:this._data})})}_initializeGrid(){this.gridConfig={data:u([]),defaultPagination:100,maxTableHeight:$.maxTableHeightWithSearch,noDataMessage:{text:"No Items Found"},features:{showSearch:!0,trackChanges:!0},elevation:2,columns:[{field:"name",title:"Name",type:"string",extraStyles:{"min-width":"250px"}},{field:"type",title:"Service Type",type:"string",extraStyles:{"min-width":"150px"}},{field:"ownerId",title:"Owner",type:"select",stream:{name:"name",value:"_id",stream:this._lovService.userLov$},extraStyles:{"min-width":"200px"}},{field:"url",title:"Service Url",type:"string",extraStyles:{"min-width":"250px"}},{field:"createdAt",title:"Created At",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}},{field:"updatedAt",title:"Updated At",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}}],actionsColumn:{enabled:this._currentScreen.update||this._currentScreen.delete,maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"110px",minWidth:window.innerWidth<700?void 0:"110px",buttons:[{prefixIcon:{icon:"icon_edit"},label:{text:"Edit"},onClickFn:e=>this._openService(e),isVisibleFn:()=>this._currentScreen.update,matType:"mat-icon-button"},{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:e=>this._deleteService(e),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_openService(e){let r={title:{text:e?"Edit Service":"Add Service"},form:{value:e,fields:[{name:"name",type:"text",label:{text:"Service Name"},required:!0},{name:"type",type:"autocomplete",flexibleValue:!0,label:{text:"Service Type"},options:Array.from(new Set(this._servicesService.serviceValue$.value.map(t=>t.type))).map(t=>({name:t,value:t})),required:!0},{name:"url",type:"text",label:{text:"Service Url"},required:!0,minLength:4},{name:"ownerId",type:"autocomplete",label:{text:"Service Owner"},transformer:{nameKey:"name",valueKey:"_id"},stream:this._lovService.userLov$,required:!0},{name:"editorsId",type:"select",label:{text:"Editors"},transformer:{nameKey:"name",valueKey:"_id"},multiple:!0,stream:this._lovService.userLov$},{name:"viewLogs",type:"toggle",label:{text:"View Logs"}}]},beforeCloseObservable:t=>e?this._servicesService.updateService(o(o({},e),t)):this._servicesService.addService(t),getAfterSuccessResponse:t=>{t.data&&this._servicesService._updateServices(t.data,e?"edit":"add")}};this._dialog.openFormPopup(r,"1000px")}_deleteService(e){let r={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this service?"}};this._dialog.openConfirmPopup(r).afterClosed().pipe(n(1)).subscribe(t=>{t&&e?._id&&this._servicesService.deleteService(e)})}static{this.\u0275fac=function(r){return new(r||i)}}static{this.\u0275cmp=p({type:i,selectors:[["ks-solutions-services-listing"]],standalone:!0,features:[x([c]),b],decls:1,vars:1,consts:[[3,"config","refresh$"]],template:function(r,t){r&1&&S(0,N,1,2,"ks-basic-grid",0),r&2&&f(t.gridConfig?0:-1)},dependencies:[E],changeDetection:0})}}return i})();export{Y as ServiceComponent};
