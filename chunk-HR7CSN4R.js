import{a as G}from"./chunk-HXKFJ2GE.js";import{a as E}from"./chunk-RN7YLSYN.js";import{a as R}from"./chunk-ERG5Z3O3.js";import{a as s}from"./chunk-V3RKPLKU.js";import{a as F}from"./chunk-O6Z6ZKPB.js";import"./chunk-5YWUWVK4.js";import{a as O}from"./chunk-DDY2ZFNV.js";import{L as I,T as A,V as N,Y as P,ma as $}from"./chunk-E5MLKHCJ.js";import"./chunk-CARY4E7O.js";import"./chunk-ARNZMF2R.js";import{$b as w,Fa as x,Hb as L,N as n,Nb as y,Sb as b,Tb as v,Tc as T,Yb as C,a as l,bc as d,ea as h,ka as r,n as g,o as m,oa as f,sb as c,tc as D,uc as k,ya as u,za as _,zb as S}from"./chunk-42PURYOY.js";var p=(()=>{class i{constructor(){this._networkService=r(P),this._loginLogs$=new m([]),this.loginLogs$=this._loginLogs$.asObservable()}getAllLoginLogs(e){this._networkService.post(s.LOGIN_LOGS.logs,e).pipe(n(1)).subscribe({next:t=>{t&&t.data&&this._loginLogs$.next(t.data.map(o=>{let a=o.userInformation||{};return l(l({},o),a)}))}})}deleteLoginLogs(e){this._networkService.delete(s.LOGIN_LOGS.logs,void 0,e._id).pipe(n(1)).subscribe({next:()=>{this._updateLogs(e,"delete")}})}deleteSelectedLogs(e){this._networkService.delete(s.LOGIN_LOGS.selectedLogs,{ids:e.map(t=>t._id)}).pipe(n(1)).subscribe({next:()=>{this._updateLogs(e,"delete")}})}_updateLogs(e,t){G.UpdateArrayBehaviorSubject(this._loginLogs$,e,t)}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=h({token:i,factory:i.\u0275fac})}}return i})();function j(i,M){if(i&1){let e=C();b(0,"ks-basic-grid",1),w("selectionChange",function(o){u(e);let a=d();return _(a.selectionChange(o))}),v()}if(i&2){let e=d();L("config",e.gridConfig)("refresh$",e.refresh$)}}var ae=(()=>{class i{constructor(){this._destroyRef=r(x),this._navService=r(O),this._lovService=r(R),this._dialog=r(N),this._LoginLogsService=r(p),this._currentScreen=F("login_logs_listing"),this._data=[],this._showDeleteAll=c(!1),this._selectedLogs=[],this.refresh$=new g}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:T(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},onClick:()=>{this._openSearch()}}]});let e=A.getUtcDate();this._LoginLogsService.getAllLoginLogs({fromDate:e.toDate(),toDate:e.toDate()}),this._initializeGrid(),this._LoginLogsService.loginLogs$.pipe(I(this._destroyRef)).subscribe(t=>{this._data=t,this.refresh$.next({data:this._data})})}selectionChange(e){this._showDeleteAll.set(!!e.length),this._selectedLogs=e}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:c([]),defaultPagination:150,maxTableHeight:E.maxTableHeightWithSearch,noDataMessage:{text:"No login logs Found"},features:{showSearch:!0},elevation:2,columns:[{field:"email",title:"Email",type:"string",position:"p-start",enableToggleColumn:!0},{field:"name",title:"Name",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"ip",title:"ip",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"200px"}},{field:"deviceType",title:"Device Type",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"screenWidth",title:"Screen Width",type:"number",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"screenHeight",title:"Screen Height",type:"number",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"deviceOrientation",title:"Screen Orientation",type:"number",position:"p-start",extraStyles:{"min-width":"160px","max-width":"160px"}},{field:"userAgent",title:"User Agent",type:"string",position:"p-start",extraStyles:{"min-width":"300px","max-width":"300px"}}],actionsColumn:{enabled:this._currentScreen.delete,buttons:[{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:e=>this._deleteLog(e),matType:"mat-icon-button"}]}}}_openSearch(){if(!this._currentScreen.search)return;let e={title:{text:"Login Logs Search"},saveButton:{label:{text:"Search"},prefixIcon:{icon:"icon_search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start"},{name:"toDate",label:{text:"To Date"},type:"date",requiredParent:["fromDate"],maxMonthFromRequired:12,range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"userId",label:{text:"User"},type:"autocomplete",stream:this._lovService.userLov$,transformer:{nameKey:"name",valueKey:"_id"}}]}};this._dialog.openFormPopup(e,"400px").afterClosed().pipe(n(1)).subscribe(t=>{t&&this._LoginLogsService.getAllLoginLogs({fromDate:t.fromDate,toDate:t.toDate,userId:t.userId})})}_deleteLog(e){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(n(1)).subscribe(o=>{o&&e?._id&&this._LoginLogsService.deleteLoginLogs(e)})}_deleteSelectedLogs(){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(n(1)).subscribe(t=>{t&&this._LoginLogsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=f({type:i,selectors:[["ks-solutions-login-logs-listing"]],standalone:!0,features:[D([p]),k],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(t,o){t&1&&S(0,j,1,2,"ks-basic-grid",0),t&2&&y(o.gridConfig?0:-1)},dependencies:[$],changeDetection:0})}}return i})();export{ae as LoginLogsComponent};
