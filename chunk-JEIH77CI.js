import{a as d}from"./chunk-IXTZP2PS.js";import{a as R}from"./chunk-JHOHYJWD.js";import{a as F}from"./chunk-5BWCYXSX.js";import{a as j}from"./chunk-H7GWUZY2.js";import{a as G}from"./chunk-JDEWHVZM.js";import"./chunk-HMNUYURD.js";import{a as s}from"./chunk-NZP3AJU7.js";import{a as P}from"./chunk-VL4WVYQ7.js";import{O as A,_ as N,aa as $,da as E,fa as H,va as O}from"./chunk-OMSYFKJ3.js";import"./chunk-CARY4E7O.js";import"./chunk-Z72V5FLM.js";import{$b as D,Fa as S,Hb as b,N as r,Nb as y,Sb as v,Tb as C,Tc as T,Yb as w,bc as c,ea as f,ka as o,n as g,o as h,oa as u,sb as l,u as p,uc as k,v as a,vc as I,ya as _,za as x,zb as L}from"./chunk-P5AQMEDB.js";var m=(()=>{class i{constructor(){this._networkService=o(E),this._loginLogs$=new h([]),this.loginLogs$=this._loginLogs$.asObservable()}getAllLoginLogs(t){this._networkService.post(s.LOGIN_LOGS.logs,t).pipe(r(1)).subscribe({next:e=>{e&&e.data&&this._loginLogs$.next(e.data)}})}deleteLoginLogs(t){this._networkService.delete(s.LOGIN_LOGS.logs,void 0,t._id).pipe(r(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}deleteSelectedLogs(t){this._networkService.delete(s.LOGIN_LOGS.selectedLogs,{ids:t.map(e=>e._id)}).pipe(r(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}_updateLogs(t,e){R.UpdateArrayBehaviorSubject(this._loginLogs$,t,e,"_id")}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275prov=f({token:i,factory:i.\u0275fac})}}return i})();function U(i,V){if(i&1){let t=w();v(0,"ks-basic-grid",1),D("selectionChange",function(n){_(t);let M=c();return x(M.selectionChange(n))}),C()}if(i&2){let t=c();b("config",t.gridConfig)("refresh$",t.refresh$)}}var de=(()=>{class i{constructor(){this._destroyRef=o(S),this._navService=o(P),this._lovService=o(j),this._dialog=o($),this._snackbar=o(H),this._LoginLogsService=o(m),this._currentScreen=G("login_logs_listing"),this._data=[],this._showDeleteAll=l(!1),this._selectedLogs=[],this.refresh$=new g}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:T(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},hide:!this._currentScreen.search,onClick:()=>{this._openSearch()}}]}),this._LoginLogsService.getAllLoginLogs({fromDate:d("start"),toDate:d("end")}),this._initializeGrid(),this._LoginLogsService.loginLogs$.pipe(A(this._destroyRef)).subscribe(t=>{this._data=t,this.refresh$.next({data:this._data})})}selectionChange(t){this._showDeleteAll.set(!!t.length),this._selectedLogs=t}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:l([]),defaultPagination:150,maxTableHeight:F.maxTableHeightWithSearch,noDataMessage:{text:"No login logs Found"},features:{showSearch:!0},elevation:2,columns:[{field:"email",title:"Email",type:"string",enableToggleColumn:!0},{field:"name",title:"Name",type:"string",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"ip",title:"ip",type:"string",extraStyles:{"min-width":"120px","max-width":"200px"}},{field:"deviceType",title:"Device Type",type:"string",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"userInformation.screenWidth",title:"Screen Width",type:"number",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"userInformation.screenHeight",title:"Screen Height",type:"number",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"userInformation.deviceOrientation",title:"Screen Orientation",type:"number",extraStyles:{"min-width":"160px","max-width":"160px"}},{field:"userAgent",title:"User Agent",type:"string",extraStyles:{"min-width":"300px","max-width":"300px"}}],actionsColumn:{enabled:this._currentScreen.delete,buttons:[{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:t=>this._deleteLog(t),matType:"mat-icon-button"}]}}}_openSearch(){if(!this._currentScreen.search)return;let t={title:{text:"Login Logs Search"},saveButton:{label:{text:"Search"},prefixIcon:{icon:"icon_search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start",range:{max:"toDate"}},{name:"toDate",label:{text:"To Date"},type:"date",range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"userId",label:{text:"User"},type:"autocomplete",stream:this._lovService.userLov$,transformer:{nameKey:"name",valueKey:"_id"}}]},beforeCloseObservable:e=>e.fromDate&&e.toDate&&!N.isValidDateRange(366,e.fromDate,e.toDate)?(this._snackbar.open({text:"Maximum allowed date gap is 1 year."},"error"),a(()=>"")):e.fromHour!==void 0&&e.toHour!==void 0&&e.fromHour>=e.toHour?(this._snackbar.open({text:"From hour should be smaller than to hour."},"error"),a(()=>"")):p(e)};this._dialog.openFormPopup(t,"400px").afterClosed().pipe(r(1)).subscribe(e=>{e&&this._LoginLogsService.getAllLoginLogs({fromDate:e.fromDate,toDate:e.toDate,userId:e.userId})})}_deleteLog(t){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(r(1)).subscribe(n=>{n&&t?._id&&this._LoginLogsService.deleteLoginLogs(t)})}_deleteSelectedLogs(){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(r(1)).subscribe(e=>{e&&this._LoginLogsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275cmp=u({type:i,selectors:[["ks-solutions-login-logs-listing"]],standalone:!0,features:[k([m]),I],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(e,n){e&1&&L(0,U,1,2,"ks-basic-grid",0),e&2&&y(n.gridConfig?0:-1)},dependencies:[O],changeDetection:0})}}return i})();export{de as LoginLogsComponent};
