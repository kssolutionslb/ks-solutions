import{a as N}from"./chunk-3SSBONDS.js";import{a as $}from"./chunk-RN7YLSYN.js";import{a as I}from"./chunk-YLXVY45S.js";import{a as n}from"./chunk-X64TF3C4.js";import{a as F}from"./chunk-5GWMFGPU.js";import"./chunk-HMNUYURD.js";import{a as E}from"./chunk-NNKWD6R3.js";import{M as A,Y as T,_ as k,ba as P,sa as U}from"./chunk-EYM2RH5N.js";import"./chunk-CARY4E7O.js";import"./chunk-F5WOQGUX.js";import{$b as b,Fa as f,Hb as S,N as o,Nb as x,Sb as v,Tb as y,Tc as D,Yb as L,bc as c,ea as m,ka as s,n as l,o as p,oa as h,sb as a,uc as C,vc as w,ya as g,za as u,zb as _}from"./chunk-RQMRH3XI.js";var d=(()=>{class i{constructor(){this._networkService=s(P),this._updateLogs$=new p([]),this.updateLogs$=this._updateLogs$.asObservable()}getAllLogs(e){this._networkService.post(n.UPDATE_LOGS.byUser,e).pipe(o(1)).subscribe({next:t=>{t&&t.data&&this._updateLogs$.next(t.data)}})}getAllSearchLogs(e){this._networkService.post(n.UPDATE_LOGS.search,e).pipe(o(1)).subscribe({next:t=>{t&&t.data&&this._updateLogs$.next(t.data)}})}deleteLogs(e){this._networkService.delete(n.UPDATE_LOGS.logs,void 0,e._id).pipe(o(1)).subscribe({next:()=>{this._updateLogs(e,"delete")}})}deleteSelectedLogs(e){this._networkService.delete(n.UPDATE_LOGS.selectedLogs,{ids:e.map(t=>t._id)}).pipe(o(1)).subscribe({next:()=>{this._updateLogs(e,"delete")}})}_updateLogs(e,t){N.UpdateArrayBehaviorSubject(this._updateLogs$,e,t)}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=m({token:i,factory:i.\u0275fac})}}return i})();function M(i,j){if(i&1){let e=L();v(0,"ks-basic-grid",1),b("selectionChange",function(r){g(e);let R=c();return u(R.selectionChange(r))}),y()}if(i&2){let e=c();S("config",e.gridConfig)("refresh$",e.refresh$)}}var re=(()=>{class i{constructor(){this._destroyRef=s(f),this._navService=s(E),this._dialog=s(k),this._updateLogsService=s(d),this._lovService=s(I),this._data=[],this._currentScreen=F("update_logs_listing"),this._showDeleteAll=a(!1),this._selectedLogs=[],this.refresh$=new l}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:D(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},onClick:()=>{this._openSearch()}}]});let e=T.getUtcDate();this._lovService.getMenusAndServicesLov(),this._updateLogsService.getAllLogs({fromDate:e.toDate(),toDate:e.toDate()}),this._initializeGrid(),this._updateLogsService.updateLogs$.pipe(A(this._destroyRef)).subscribe(t=>{this._data=t,this.refresh$.next({data:this._data})})}selectionChange(e){this._showDeleteAll.set(!!e.length),this._selectedLogs=e}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:a([]),defaultPagination:150,maxTableHeight:$.maxTableHeightWithSearch,noDataMessage:{text:"No logs Found"},features:{showSearch:!0},elevation:2,columns:[{field:"email",title:"Email",type:"string",position:"p-start",enableToggleColumn:!0,extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"name",title:"Name",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}},{field:"_service",title:"Service",type:"string",extraStyles:{"min-width":"150px"}},{field:"deviceType",title:"Device Type",type:"string",position:"p-start",extraStyles:{"min-width":"110px"}},{field:"ip",title:"ip",type:"string",extraStyles:{"min-width":"110px"},position:"p-start"},{field:"userAgent",title:"User Agent",type:"string",position:"p-start",extraStyles:{"min-width":"400px","max-width":"400px"}}],actionsColumn:{enabled:!0,maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"110px",minWidth:window.innerWidth<700?void 0:"110px",buttons:[{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:e=>this._deleteLog(e),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_openSearch(){if(!this._currentScreen.search)return;let e={title:{text:"Logs Search"},saveButton:{prefixIcon:{icon:"icon_search"},label:{text:"Search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start"},{name:"toDate",label:{text:"To Date"},type:"date",requiredParent:["fromDate"],maxMonthFromRequired:12,range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"services",label:{text:"Services And Menus"},type:"select",multiple:!0,stream:this._lovService.menusAndServicesLov$,transformer:{nameKey:"name",valueKey:"_id"},required:!0}]}};this._dialog.openFormPopup(e,"800px").afterClosed().pipe(o(1)).subscribe(t=>{t&&this._updateLogsService.getAllSearchLogs({fromDate:t.fromDate,toDate:t.toDate,services:t.services?typeof t.services=="string"?[t.services]:t.services:[]})})}_deleteLog(e){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(o(1)).subscribe(r=>{r&&e&&e._id&&this._updateLogsService.deleteLogs(e)})}_deleteSelectedLogs(){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(o(1)).subscribe(t=>{t&&this._updateLogsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=h({type:i,selectors:[["ks-solutions-update-logs-listing"]],standalone:!0,features:[C([d]),w],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(t,r){t&1&&_(0,M,1,2,"ks-basic-grid",0),t&2&&x(r.gridConfig?0:-1)},dependencies:[U],changeDetection:0})}}return i})();export{re as UpdateLogsComponent};
