import{a as N}from"./chunk-JHOHYJWD.js";import{a as E}from"./chunk-5BWCYXSX.js";import{a as D}from"./chunk-2HFJK4M5.js";import{a as s}from"./chunk-7YJWRT5B.js";import{a as I}from"./chunk-GQ637NOE.js";import"./chunk-HMNUYURD.js";import{a as P}from"./chunk-72TK6UK2.js";import{O as S,aa as w,da as C,va as M}from"./chunk-XXZS4MWG.js";import"./chunk-CARY4E7O.js";import"./chunk-4KKA7PE6.js";import{Ab as x,Fa as m,Ib as f,N as a,Ob as _,Vb as y,a as o,cc as v,ea as c,ka as r,n as d,o as u,oa as p,tb as h,vc as g,wc as b}from"./chunk-VO6IE2C5.js";var l=(()=>{class i{constructor(){this._networkService=r(C),this._menus$=new u([]),this.menus$=this._menus$.asObservable()}getAllMenus(){this._networkService.get(s.MENU_PANEL.menus).pipe(a(1)).subscribe({next:e=>{e&&e.data&&this._menus$.next(e.data)}})}addMenu(e){return this._networkService.post(s.MENU_PANEL.menus,e)}updateMenu(e){return this._networkService.patch(s.MENU_PANEL.menus,e,e._id)}deleteMenu(e){this._networkService.delete(s.MENU_PANEL.menus,void 0,e._id).pipe(a(1)).subscribe({next:()=>{this._updateMenus(e,"delete")}})}cloneMenuData(e){this._networkService.post(s.MENU_PANEL.cloneMenuData,e).pipe(a(1)).subscribe()}_updateMenus(e,t){N.UpdateArrayBehaviorSubject(this._menus$,e,t,"_id")}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=c({token:i,factory:i.\u0275fac})}}return i})();function k(i,F){if(i&1&&y(0,"ks-basic-grid",0),i&2){let e=v();f("config",e.gridConfig)("refresh$",e.refresh$)}}var X=(()=>{class i{constructor(){this._destroyRef=r(m),this._navService=r(P),this._lovService=r(D),this._dialog=r(w),this._menuPanelService=r(l),this._data=[],this._currentScreen=I("menus_listing"),this.refresh$=new d}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Clone Menu Data"},prefixIcon:{icon:"icon_duplicate_batch"},hide:!(this._currentScreen.update&&this._currentScreen.insert&&this._currentScreen.delete),onClick:()=>{this._openCloneMenuData()}},{label:{text:"Create New"},prefixIcon:{icon:"icon_plus_circle"},hide:!this._currentScreen.insert,onClick:()=>{this._openMenu()}}]}),this._lovService.getMenuTemplatesLov(),this._menuPanelService.getAllMenus(),this._initializeGrid(),this._menuPanelService.menus$.pipe(S(this._destroyRef)).subscribe(e=>{this._data=e,this.refresh$.next({data:this._data})})}_initializeGrid(){this.gridConfig={data:h([]),defaultPagination:100,maxTableHeight:E.maxTableHeightWithSearch,noDataMessage:{text:"No Items Found"},features:{showSearch:!0,trackChanges:!0},elevation:2,columns:[{field:"name",title:"Name",type:"string",extraStyles:{"min-width":"120px"}},{field:"endpoint",title:"Endpoint",type:"string",extraStyles:{"min-width":"100px"}},{field:"redirect",title:"Redirect",type:"string",extraStyles:{"min-width":"120px"}},{field:"activateRedirection",title:"Redirection",type:"chip",extraStyles:{"min-width":"100px","max-width":"100px"},position:"p-start",truthy:{false:"No",true:"Yes"},setChipClass:e=>e.activateRedirection===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"isExternal",title:"External",type:"chip",extraStyles:{"min-width":"100px","max-width":"100px"},position:"p-start",truthy:{false:"No",true:"Yes"},setChipClass:e=>e.isExternal===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"hasInvoice",title:"Has Invoice",type:"chip",extraStyles:{"min-width":"100px","max-width":"100px"},position:"p-start",truthy:{false:"No",true:"Yes"},setChipClass:e=>e.hasInvoice===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"viewCount",title:"View Count",type:"number",extraStyles:{"min-width":"100px"}},{field:"ownerId",title:"Owner",type:"select",stream:{name:"name",value:"_id",stream:this._lovService.userLov$},extraStyles:{"min-width":"120px"}},{field:"templateId",title:"Template",type:"select",stream:{name:"name",value:"templateId",stream:this._lovService.menuTemplatesLov$},extraStyles:{"min-width":"120px"}},{field:"createdAt",title:"Created At",type:"date",dateFormat:"dd/MM/yyyy",extraStyles:{"min-width":"100px","max-width":"100px"}},{field:"expiresAt",title:"Expires At",type:"date",dateFormat:"dd/MM/yyyy",extraStyles:{"min-width":"100px","max-width":"100px"}}],actionsColumn:{maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"110px",minWidth:window.innerWidth<700?void 0:"110px",enabled:this._currentScreen.update||this._currentScreen.delete,buttons:[{prefixIcon:{icon:"icon_edit"},label:{text:"Edit"},onClickFn:e=>this._openMenu(e),isVisibleFn:()=>this._currentScreen.update,matType:"mat-icon-button"},{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:e=>this._deleteInventory(e),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_openCloneMenuData(){let e={title:{text:"Clone Menu Data"},form:{fields:[{name:"oldMenuId",label:{text:"Clone Data From"},type:"select",required:!0,transformer:{nameKey:"name",valueKey:"_id"},stream:this._menuPanelService.menus$},{name:"newMenuId",label:{text:"Target Menu"},type:"select",required:!0,transformer:{nameKey:"name",valueKey:"_id"},stream:this._menuPanelService.menus$}]}};this._dialog.openFormPopup(e,"400px").afterClosed().pipe(a(1)).subscribe(t=>{t&&this._menuPanelService.cloneMenuData(t)})}_openMenu(e){let t={title:{text:e?"Edit Menu":"Add Menu"},form:{groups:[{id:1,name:{text:"Credentials"},order:1}],value:o({expiresAt:new Date(new Date().getFullYear()+1,new Date().getMonth(),new Date().getDate())},e||{}),fields:[{name:"name",label:{text:"Menu Name"},type:"text",required:!0},{name:"endpoint",label:{text:"Endpoint"},type:"text",minLength:4,required:!0},{name:"ownerId",type:"autocomplete",stream:this._lovService.userLov$,label:{text:"Menu Owner"},transformer:{nameKey:"name",valueKey:"_id"},required:!0},{name:"editorsId",type:"select",label:{text:"Editors"},stream:this._lovService.userLov$,transformer:{nameKey:"name",valueKey:"_id"},multiple:!0},{name:"redirect",type:"text",label:{text:"Redirect Url"},maxLength:100},{name:"viewCount",type:"number",label:{text:"View Count"},readonly:!this._currentScreen.delete},{name:"expiresAt",type:"date",label:{text:"Expires At"},required:!0},{name:"templateId",type:"autocomplete",label:{text:"Template"},transformer:{nameKey:"name",valueKey:"templateId"},stream:this._lovService.menuTemplatesLov$,required:!0},{name:"activateRedirection",label:{text:"Activate Redirection"},type:"toggle"},{name:"isExternal",label:{text:"External"},type:"toggle"},{name:"hasInvoice",label:{text:"Has Invoice"},type:"toggle"},{name:"githubRepo",label:{text:"Github Account"},type:"text",groupId:1},{name:"filePath",label:{text:"Github Repo Name"},type:"text",groupId:1},{name:"fileName",label:{text:"FilePath & File Name"},type:"text",groupId:1},{name:"fileTemplate",label:{text:"File Template"},type:"textaria",groupId:1}]},beforeCloseObservable:n=>e?this._menuPanelService.updateMenu(o(o({},e),n)):this._menuPanelService.addMenu(n),getAfterSuccessResponse:n=>{n.data&&this._menuPanelService._updateMenus(n.data,e?"edit":"add")}};this._dialog.openFormPopup(t)}_deleteInventory(e){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this menu? Deleting it will remove all associated data, including logs, categories, subcategories, items, menu information, and update logs."}};this._dialog.openConfirmPopup(t).afterClosed().pipe(a(1)).subscribe(n=>{n&&e?._id&&this._menuPanelService.deleteMenu(e)})}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=p({type:i,selectors:[["ks-solutions-menus-panel-listing"]],standalone:!0,features:[g([l]),b],decls:1,vars:1,consts:[[3,"config","refresh$"]],template:function(t,n){t&1&&x(0,k,1,2,"ks-basic-grid",0),t&2&&_(n.gridConfig?0:-1)},dependencies:[M],changeDetection:0})}}return i})();export{X as MenuPanelComponent};
