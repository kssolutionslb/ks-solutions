import{a as R}from"./chunk-3SSBONDS.js";import{a as N}from"./chunk-RN7YLSYN.js";import{a as G}from"./chunk-NYUUJRJM.js";import{a as I}from"./chunk-EJCUKZMJ.js";import"./chunk-HMNUYURD.js";import{a as n}from"./chunk-VMV3LQCJ.js";import{a as H}from"./chunk-DQAHPI7D.js";import{M as P,Y as c,_ as E,ba as U,da as $,ta as F}from"./chunk-RIXI3GFI.js";import"./chunk-CARY4E7O.js";import"./chunk-Z72V5FLM.js";import{$b as w,Fa as x,Hb as b,N as o,Nb as y,Sb as L,Tb as C,Tc as T,Yb as D,bc as d,ea as f,ka as s,n as m,o as h,oa as g,sb as l,u,uc as k,v as a,vc as A,ya as _,za as S,zb as v}from"./chunk-P5AQMEDB.js";var p=(()=>{class i{constructor(){this._networkService=s(U),this._updateLogs$=new h([]),this.updateLogs$=this._updateLogs$.asObservable()}getAllLogs(t){this._networkService.post(n.UPDATE_LOGS.byUser,t).pipe(o(1)).subscribe({next:e=>{e&&e.data&&this._updateLogs$.next(e.data)}})}getAllSearchLogs(t){this._networkService.post(n.UPDATE_LOGS.search,t).pipe(o(1)).subscribe({next:e=>{e&&e.data&&this._updateLogs$.next(e.data)}})}deleteLogs(t){this._networkService.delete(n.UPDATE_LOGS.logs,void 0,t._id).pipe(o(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}deleteSelectedLogs(t){this._networkService.delete(n.UPDATE_LOGS.selectedLogs,{ids:t.map(e=>e._id)}).pipe(o(1)).subscribe({next:()=>{this._updateLogs(t,"delete")}})}_updateLogs(t,e){R.UpdateArrayBehaviorSubject(this._updateLogs$,t,e)}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275prov=f({token:i,factory:i.\u0275fac})}}return i})();function j(i,V){if(i&1){let t=D();L(0,"ks-basic-grid",1),w("selectionChange",function(r){_(t);let M=d();return S(M.selectionChange(r))}),C()}if(i&2){let t=d();b("config",t.gridConfig)("refresh$",t.refresh$)}}var le=(()=>{class i{constructor(){this._destroyRef=s(x),this._navService=s(H),this._dialog=s(E),this._snackbar=s($),this._updateLogsService=s(p),this._lovService=s(G),this._data=[],this._currentScreen=I("update_logs_listing"),this._showDeleteAll=l(!1),this._selectedLogs=[],this.refresh$=new m}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Delete Selected"},prefixIcon:{icon:"icon_delete_filled"},show:T(()=>this._currentScreen.delete&&this._showDeleteAll()),onClick:()=>{this._deleteSelectedLogs()}},{label:{text:"Advance Search"},prefixIcon:{icon:"icon_search"},onClick:()=>{this._openSearch()}}]});let t=c.getUtcDate();this._lovService.getMenusAndServicesLov(),this._updateLogsService.getAllLogs({fromDate:t.toDate(),toDate:t.toDate()}),this._initializeGrid(),this._updateLogsService.updateLogs$.pipe(P(this._destroyRef)).subscribe(e=>{this._data=e,this.refresh$.next({data:this._data})})}selectionChange(t){this._showDeleteAll.set(!!t.length),this._selectedLogs=t}_initializeGrid(){this.gridConfig={multiSelect:this._currentScreen.delete,data:l([]),defaultPagination:150,maxTableHeight:N.maxTableHeightWithSearch,noDataMessage:{text:"No logs Found"},features:{showSearch:!0},elevation:2,columns:[{field:"email",title:"Email",type:"string",position:"p-start",enableToggleColumn:!0},{field:"name",title:"Name",type:"string",position:"p-start",extraStyles:{"min-width":"120px","max-width":"120px"}},{field:"createdAt",title:"Time",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}},{field:"_service",title:"Service",type:"string",extraStyles:{"min-width":"150px"}},{field:"deviceType",title:"Device Type",type:"string",position:"p-start",extraStyles:{"min-width":"110px"}},{field:"ip",title:"ip",type:"string",extraStyles:{"min-width":"110px"},position:"p-start"},{field:"userAgent",title:"User Agent",type:"string",position:"p-start",extraStyles:{"min-width":"400px","max-width":"400px"}}],actionsColumn:{enabled:!0,maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"110px",minWidth:window.innerWidth<700?void 0:"110px",buttons:[{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:t=>this._deleteLog(t),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_openSearch(){if(!this._currentScreen.search)return;let t={title:{text:"Logs Search"},saveButton:{prefixIcon:{icon:"icon_search"},label:{text:"Search"},matType:"mat-stroked-button"},form:{fields:[{name:"fromDate",label:{text:"From Date"},type:"date",required:!0,formatTime:"start",range:{max:"toDate"}},{name:"toDate",label:{text:"To Date"},type:"date",range:{min:"fromDate"},required:!0,formatTime:"end"},{name:"services",label:{text:"Services And Menus"},type:"select",multiple:!0,stream:this._lovService.menusAndServicesLov$,transformer:{nameKey:"name",valueKey:"_id"},required:!0}]},beforeCloseObservable:e=>e.fromDate&&e.toDate&&!c.isValidDateRange(366,e.fromDate,e.toDate)?(this._snackbar.open({text:"Maximum allowed date gap is 1 year."},"error"),a(()=>"")):e.fromHour!==void 0&&e.toHour!==void 0&&e.fromHour>=e.toHour?(this._snackbar.open({text:"From hour should be smaller than to hour."},"error"),a(()=>"")):u(e)};this._dialog.openFormPopup(t,"800px").afterClosed().pipe(o(1)).subscribe(e=>{e&&this._updateLogsService.getAllSearchLogs({fromDate:e.fromDate,toDate:e.toDate,services:e.services?typeof e.services=="string"?[e.services]:e.services:[]})})}_deleteLog(t){let e={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this log?"}};this._dialog.openConfirmPopup(e).afterClosed().pipe(o(1)).subscribe(r=>{r&&t&&t._id&&this._updateLogsService.deleteLogs(t)})}_deleteSelectedLogs(){let t={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete all selected logs?"}};this._dialog.openConfirmPopup(t).afterClosed().pipe(o(1)).subscribe(e=>{e&&this._updateLogsService.deleteSelectedLogs(this._selectedLogs)})}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275cmp=g({type:i,selectors:[["ks-solutions-update-logs-listing"]],standalone:!0,features:[k([p]),A],decls:1,vars:1,consts:[[3,"config","refresh$"],[3,"selectionChange","config","refresh$"]],template:function(e,r){e&1&&v(0,j,1,2,"ks-basic-grid",0),e&2&&y(r.gridConfig?0:-1)},dependencies:[F],changeDetection:0})}}return i})();export{le as UpdateLogsComponent};
