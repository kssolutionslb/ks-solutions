import{a as q}from"./chunk-3CFIX7R5.js";import{a as W}from"./chunk-JHOHYJWD.js";import{a as O}from"./chunk-5BWCYXSX.js";import{a as U}from"./chunk-UZQHL6UL.js";import{a as l}from"./chunk-7YJWRT5B.js";import{a as c}from"./chunk-5IM6IVN6.js";import"./chunk-HMNUYURD.js";import{a as K}from"./chunk-NYBZM275.js";import{O as j,aa as x,ba as P,da as V,ra as M,ua as B,v as D,va as G,w as L}from"./chunk-VY5GT2Q6.js";import"./chunk-CARY4E7O.js";import"./chunk-4KKA7PE6.js";import{Ab as h,Fa as I,Ib as a,N as s,Ob as f,Tb as C,Ub as w,Vb as S,a as o,ac as R,b as T,cc as _,ea as k,ib as m,jb as b,ka as n,n as d,nc as A,o as p,oa as u,oc as F,tb as v,vc as $,wc as g,yc as N}from"./chunk-VO6IE2C5.js";var E=(()=>{class t{constructor(){this._networkService=n(V),this._service$=new p([]),this.service$=this._service$.asObservable(),this.serviceValue$=this._service$}getAllServices(){this._networkService.get(l.SERVICES.service).pipe(s(1)).subscribe({next:e=>{e&&e.data&&this._service$.next(e.data)}})}addService(e){return this._networkService.post(l.SERVICES.service,e)}updateService(e){return this._networkService.patch(l.SERVICES.service,e,e._id)}deleteService(e){this._networkService.delete(l.SERVICES.service,void 0,e._id).pipe(s(1)).subscribe({next:()=>{this._updateServices(e,"delete")}})}_updateServices(e,r){W.UpdateArrayBehaviorSubject(this._service$,e,r,"_id")}static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275prov=k({token:t,factory:t.\u0275fac})}}return t})();var Q=t=>({loading:t,disableInteractions:!0,position:"fixed"});function X(t,z){if(t&1&&S(0,"ks-loader-overlay",0),t&2){let e=_();a("config",N(1,Q,e.trueSignal))}}var Y=(()=>{class t{constructor(e,r){this._dialogRef=e,this.data=r,this._dialog=n(x),this._loaderService=n(P),this._currentScreen=c("services_listing"),this._save$=new d,this.trueSignal=v(!0),this.loading=this._loaderService.isLoading,this.cardConfig={header:{title:{text:"Service Settings",tag:"h3",fontWeight:"700"},position:"center",suffixButton:{label:{text:"Close"},matType:"mat-icon-button",prefixIcon:{icon:"icon_x_circle"},onClick:()=>{this._dialogRef.close()}}},content:{addClass:"card p-2"},footer:{buttons:this._currentScreen.update?[{label:{text:"Save"},matType:"mat-flat-button",prefixIcon:{icon:"icon_save"},onClick:()=>{this._save()}},{label:{text:"Test"},matType:"mat-stroked-button",onClick:()=>{this._test()}}]:[{label:{text:"Close"},onClick:()=>{this._dialogRef.close()},matType:"mat-flat-button"}],position:"center"}},this.config={save$:this._save$,currentScreen:c("menu_invoice"),stream:new p({fields:[]})}}ngAfterViewInit(){this.data?.service?.fields&&this.config.stream.next(this.data.service.fields)}onSave(e){this.data?.servicesService.updateService(T(o({},this.data.service),{fields:e})).pipe(s(1)).subscribe(r=>{r?.data&&(this.data?.servicesService._updateServices(r.data,"edit"),this._dialogRef.close())})}onTest(e){this._dialog.openFormPopup({title:{text:"Test"},form:e,hideClearButton:!0,saveButton:{label:{text:"Test Save"},matType:"mat-flat-button"}})}_save(){this._save$.next("save")}_test(){this._save$.next("test")}static{this.\u0275fac=function(r){return new(r||t)(b(D),b(L))}}static{this.\u0275cmp=u({type:t,selectors:[["ks-solutions-service-settings"]],standalone:!0,features:[g],decls:5,vars:4,consts:[[3,"config"],[1,"h3","text-center"],[3,"save","test","config"]],template:function(r,i){r&1&&(C(0,"ks-base-card",0)(1,"div",1),A(2),w(),C(3,"kss-lib-form-builder",2),R("save",function(y){return i.onSave(y)})("test",function(y){return i.onTest(y)}),w()(),h(4,X,1,3,"ks-loader-overlay",0)),r&2&&(a("config",i.cardConfig),m(2),F(i.data==null||i.data.service==null?null:i.data.service.name),m(),a("config",i.config),m(),f(i.loading()?4:-1))},dependencies:[M,q,B],changeDetection:0})}}return t})();function Z(t,z){if(t&1&&S(0,"ks-basic-grid",0),t&2){let e=_();a("config",e.gridConfig)("refresh$",e.refresh$)}}var Fe=(()=>{class t{constructor(){this._destroyRef=n(I),this._navService=n(K),this._lovService=n(U),this._dialog=n(x),this._servicesService=n(E),this._data=[],this._currentScreen=c("services_listing"),this.refresh$=new d}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:this._currentScreen.screenName,buttons:[{label:{text:"Create New"},prefixIcon:{icon:"icon_plus_circle"},hide:!this._currentScreen.insert,onClick:()=>{this._openService()}}]}),this._servicesService.getAllServices(),this._initializeGrid(),this._servicesService.service$.pipe(j(this._destroyRef)).subscribe(e=>{this._data=e,this.refresh$.next({data:this._data})})}_initializeGrid(){this.gridConfig={data:v([]),defaultPagination:100,maxTableHeight:O.maxTableHeightWithSearch,noDataMessage:{text:"No Items Found"},features:{showSearch:!0,trackChanges:!0},elevation:2,columns:[{field:"name",title:"Name",type:"string",extraStyles:{"min-width":"250px"}},{field:"type",title:"Service Type",type:"string",extraStyles:{"min-width":"150px"}},{field:"ownerId",title:"Owner",type:"select",stream:{name:"name",value:"_id",stream:this._lovService.userLov$},extraStyles:{"min-width":"120px"}},{field:"url",title:"Service Url",type:"string",extraStyles:{"min-width":"250px"}},{field:"viewLogs",title:"View Logs",type:"chip",extraStyles:{"min-width":"100px"},truthy:{false:"No",true:"Yes"},setChipClass:e=>e.viewLogs===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"editable",title:"Editable",type:"chip",extraStyles:{"min-width":"100px"},truthy:{false:"No",true:"Yes"},setChipClass:e=>e.editable===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"isExternal",title:"External",type:"chip",extraStyles:{"min-width":"100px"},truthy:{false:"No",true:"Yes"},setChipClass:e=>e.isExternal===!0?"rounded rounded-5 px-3 py-1 text-bg-success cs-w-120":"rounded rounded-5 px-3 py-1 text-bg-danger cs-w-120"},{field:"createdAt",title:"Created At",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"180px"}},{field:"expiresAt",title:"Expires At",type:"date",dateFormat:"dd/MM/yyyy",extraStyles:{"min-width":"100px","max-width":"100px"}}],actionsColumn:{enabled:this._currentScreen.update||this._currentScreen.delete,maxButtons:window.innerWidth<700?1:void 0,maxWidth:window.innerWidth<700?void 0:"160px",minWidth:window.innerWidth<700?void 0:"160px",buttons:[{prefixIcon:{icon:"icon_settings"},label:{text:"Settings"},onClickFn:e=>this._openServiceSettings(e),isVisibleFn:()=>this._currentScreen.update,matType:"mat-icon-button"},{prefixIcon:{icon:"icon_edit"},label:{text:"Edit"},onClickFn:e=>this._openService(e),isVisibleFn:()=>this._currentScreen.update,matType:"mat-icon-button"},{prefixIcon:{icon:"icon_delete",color:"red"},label:{text:"Delete"},onClickFn:e=>this._deleteService(e),isVisibleFn:()=>this._currentScreen.delete,matType:"mat-icon-button"}]}}}_openService(e){let r={title:{text:e?"Edit Service":"Add Service"},form:{value:e,groups:[{id:1,name:{text:"Credentials"},order:1}],fields:[{name:"name",type:"text",label:{text:"Service Name"},required:!0},{name:"type",type:"autocomplete",flexibleValue:!0,label:{text:"Service Type"},options:Array.from(new Set(this._servicesService.serviceValue$.value.map(i=>i.type))).map(i=>({name:i,value:i})),required:!0},{name:"url",type:"text",label:{text:"Service Url"},required:!0,minLength:4},{name:"ownerId",type:"autocomplete",label:{text:"Service Owner"},transformer:{nameKey:"name",valueKey:"_id"},stream:this._lovService.userLov$,required:!0},{name:"editorsId",type:"select",label:{text:"Editors"},transformer:{nameKey:"name",valueKey:"_id"},multiple:!0,stream:this._lovService.userLov$},{name:"expiresAt",type:"date",label:{text:"Expires At"},required:!0},{name:"viewLogs",type:"toggle",label:{text:"View Logs"}},{name:"editable",type:"toggle",label:{text:"Editable"}},{name:"isExternal",label:{text:"External"},type:"toggle"},{name:"githubRepo",label:{text:"Github Account"},type:"text",groupId:1},{name:"filePath",label:{text:"Github Repo Name"},type:"text",groupId:1},{name:"fileName",label:{text:"FilePath & File Name"},type:"text",groupId:1},{name:"fileTemplate",label:{text:"File Template"},type:"textaria",groupId:1}]},beforeCloseObservable:i=>e?this._servicesService.updateService(o(o({},e),i)):this._servicesService.addService(i),getAfterSuccessResponse:i=>{i.data&&this._servicesService._updateServices(i.data,e?"edit":"add")}};this._dialog.openFormPopup(r,"1000px")}_deleteService(e){let r={title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this service?"}};this._dialog.openConfirmPopup(r).afterClosed().pipe(s(1)).subscribe(i=>{i&&e?._id&&this._servicesService.deleteService(e)})}_openServiceSettings(e){this._dialog.open(Y,{data:{servicesService:this._servicesService,service:e},width:"95vw",maxWidth:"100%"})}static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275cmp=u({type:t,selectors:[["ks-solutions-services-listing"]],standalone:!0,features:[$([E]),g],decls:1,vars:1,consts:[[3,"config","refresh$"]],template:function(r,i){r&1&&h(0,Z,1,2,"ks-basic-grid",0),r&2&&f(i.gridConfig?0:-1)},dependencies:[G],changeDetection:0})}}return t})();export{Fe as ServiceComponent};
